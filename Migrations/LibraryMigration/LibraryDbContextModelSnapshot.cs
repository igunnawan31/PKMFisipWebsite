// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace PKMFisipWebsite.Migrations.LibraryMigration
{
    [DbContext(typeof(LibraryDbContext))]
    partial class LibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Author", b =>
                {
                    b.Property<string>("authorId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("authorEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("authorName")
                        .HasColumnType("longtext");

                    b.Property<string>("authorPhone")
                        .HasColumnType("longtext");

                    b.HasKey("authorId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("Authorship", b =>
                {
                    b.Property<string>("authorshipId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("authorId")
                        .HasColumnType("longtext");

                    b.Property<string>("bookId")
                        .HasColumnType("longtext");

                    b.HasKey("authorshipId");

                    b.ToTable("Authorships");
                });

            modelBuilder.Entity("Book", b =>
                {
                    b.Property<int>("bookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("country")
                        .HasColumnType("longtext");

                    b.Property<string>("datePublished")
                        .HasColumnType("longtext");

                    b.Property<string>("desc")
                        .HasColumnType("longtext");

                    b.Property<string>("genre")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("image")
                        .HasColumnType("longblob");

                    b.Property<string>("language")
                        .HasColumnType("longtext");

                    b.Property<int>("mediaType")
                        .HasColumnType("int");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("longtext");

                    b.Property<int>("totalPage")
                        .HasColumnType("int");

                    b.HasKey("bookId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BookPublished", b =>
                {
                    b.Property<string>("bookPublishedId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("bookId")
                        .HasColumnType("longtext");

                    b.Property<string>("publisherId")
                        .HasColumnType("longtext");

                    b.HasKey("bookPublishedId");

                    b.ToTable("BooksPublished");
                });

            modelBuilder.Entity("Publisher", b =>
                {
                    b.Property<string>("publisherId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("publisherEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("publisherName")
                        .HasColumnType("longtext");

                    b.Property<string>("publisherPhone")
                        .HasColumnType("longtext");

                    b.HasKey("publisherId");

                    b.ToTable("Publishers");
                });
#pragma warning restore 612, 618
        }
    }
}
